Na <- 6e23                    # Avogadro constant
N <- Na * m / M
T <- 30.1 * 365 * 24 * 3600   # half-life period in seconds
lambda <- log(2) / T
mu <- N * lambda
K <- 1e3
for(n in c(5, 10, 50)) {
sample_means <- colMeans(matrix(rpois(n*K, lambda = mu), nrow=n))
mu <- mean(sample_means)
sigma <- sqrt(mu/n)      # mu = Var(Xi)
# ECDF
xlims <- c(mu-3*sigma,mu+3*sigma)
Fs <- ecdf(sample_means)
plot(Fs,
xlim = xlims,
ylim = c(0,1),
col = "blue",
lwd = 2,
main=paste("ECDF vs Normal CDF (n=", n, ")", sep=""))
curve(pnorm(x, mean = mu, sd = sigma), col = "red", lwd = 2, add = TRUE)
max_difference <- max(abs(Fs(sample_means) - pnorm(sample_means, mean = mu, sd = sqrt(mu/n))))
cat("n =", n, "- Max difference =", max_diff, "\n")
}
# your team id number
###
id <- 50                  ### Change to the correct id!
###
set.seed(id)
p <- id/100
# matrices G and H
G <- matrix(c(1, 1, 1, 0, 0, 0, 0,
1, 0, 0, 1, 1, 0, 0,
0, 1, 0, 1, 0, 1, 0,
1, 1, 0, 1, 0, 0, 1), nrow = 4, byrow = TRUE)
H <- t(matrix(c(1, 0, 1, 0, 1, 0, 1,
0, 1, 1, 0, 0, 1, 1,
0, 0, 0, 1, 1, 1, 1), nrow = 3, byrow = TRUE))
# cat("The matrix G is: \n")
#G
#cat("The matrix H is: \n")
#H
#cat("The product GH must be zero: \n")
#(G%*%H) %%2
# generate N messages
message_generator <- function(N) {
matrix(sample(c(0,1), 4*N, replace = TRUE), nrow = N)
}
messages <- message_generator(100)
codewords <- (messages %*% G) %% 2
#  errors <- ...
#  received <-
M <- 137                      # atomic mass of Cesium-137
m <- id * 1e-6                # mass of each sample in grams
Na <- 6e23                    # Avogadro constant
N <- Na * m / M
T <- 30.1 * 365 * 24 * 3600   # half-life period in seconds
lambda <- log(2) / T
mu <- N * lambda
K <- 1e3
for(n in c(5, 10, 50)) {
sample_means <- colMeans(matrix(rpois(n*K, lambda = mu), nrow=n))
mu <- mean(sample_means)
sigma <- sqrt(mu/n)      # mu = Var(Xi)
# ECDF
xlims <- c(mu-3*sigma,mu+3*sigma)
Fs <- ecdf(sample_means)
plot(Fs,
xlim = xlims,
ylim = c(0,1),
col = "blue",
lwd = 2,
main=paste("ECDF vs Normal CDF (n=", n, ")", sep=""))
curve(pnorm(x, mean = mu, sd = sigma), col = "red", lwd = 2, add = TRUE)
max_difference <- max(abs(Fs(sample_means) - pnorm(sample_means, mean = mu, sd = sqrt(mu/n))))
cat("n =", n, "- Max difference =", max_diff, "\n")
}
n <- 100
sums <- colSums(matrix(rpois(n*K, lambda = mu), nrow=n))
critical <- 8e8
emp_prob <- mean(sums < critical)
emp_prob
# your team id number
###
id <- 50                  ### Change to the correct id!
###
set.seed(id)
p <- id/100
# matrices G and H
G <- matrix(c(1, 1, 1, 0, 0, 0, 0,
1, 0, 0, 1, 1, 0, 0,
0, 1, 0, 1, 0, 1, 0,
1, 1, 0, 1, 0, 0, 1), nrow = 4, byrow = TRUE)
H <- t(matrix(c(1, 0, 1, 0, 1, 0, 1,
0, 1, 1, 0, 0, 1, 1,
0, 0, 0, 1, 1, 1, 1), nrow = 3, byrow = TRUE))
# cat("The matrix G is: \n")
#G
#cat("The matrix H is: \n")
#H
#cat("The product GH must be zero: \n")
#(G%*%H) %%2
# generate N messages
message_generator <- function(N) {
matrix(sample(c(0,1), 4*N, replace = TRUE), nrow = N)
}
messages <- message_generator(100)
codewords <- (messages %*% G) %% 2
#  errors <- ...
#  received <-
M <- 137                      # atomic mass of Cesium-137
m <- id * 1e-6                # mass of each sample in grams
Na <- 6e23                    # Avogadro constant
N <- Na * m / M
T <- 30.1 * 365 * 24 * 3600   # half-life period in seconds
lambda <- log(2) / T
mu <- N * lambda
K <- 1e3
for(n in c(5, 10, 50)) {
sample_means <- colMeans(matrix(rpois(n*K, lambda = mu), nrow=n))
mu <- mean(sample_means)
sigma <- sqrt(mu/n)      # mu = Var(Xi)
# ECDF
xlims <- c(mu-3*sigma,mu+3*sigma)
Fs <- ecdf(sample_means)
plot(Fs,
xlim = xlims,
ylim = c(0,1),
col = "blue",
lwd = 2,
main=paste("ECDF vs Normal CDF (n=", n, ")", sep=""))
curve(pnorm(x, mean = mu, sd = sigma), col = "red", lwd = 2, add = TRUE)
max_difference <- max(abs(Fs(sample_means) - pnorm(sample_means, mean = mu, sd = sqrt(mu/n))))
cat("n =", n, "- Max difference =", max_diff, "\n")
}
n <- 100
sums <- colSums(matrix(rpois(n*K, lambda = mu), nrow=n))
critical <- 8e8
emp_prob <- mean(sums < critical)
emp_prob
# your team id number
###
id <- 50                  ### Change to the correct id!
###
set.seed(id)
p <- id/100
# matrices G and H
G <- matrix(c(1, 1, 1, 0, 0, 0, 0,
1, 0, 0, 1, 1, 0, 0,
0, 1, 0, 1, 0, 1, 0,
1, 1, 0, 1, 0, 0, 1), nrow = 4, byrow = TRUE)
H <- t(matrix(c(1, 0, 1, 0, 1, 0, 1,
0, 1, 1, 0, 0, 1, 1,
0, 0, 0, 1, 1, 1, 1), nrow = 3, byrow = TRUE))
# cat("The matrix G is: \n")
#G
#cat("The matrix H is: \n")
#H
#cat("The product GH must be zero: \n")
#(G%*%H) %%2
# generate N messages
message_generator <- function(N) {
matrix(sample(c(0,1), 4*N, replace = TRUE), nrow = N)
}
messages <- message_generator(100)
codewords <- (messages %*% G) %% 2
#  errors <- ...
#  received <-
M <- 137                      # atomic mass of Cesium-137
m <- id * 1e-6                # mass of each sample in grams
Na <- 6e23                    # Avogadro constant
N <- Na * m / M
T <- 30.1 * 365 * 24 * 3600   # half-life period in seconds
lambda <- log(2) / T
mu <- N * lambda
K <- 1e3
for(n in c(5, 10, 50)) {
sample_means <- colMeans(matrix(rpois(n*K, lambda = mu), nrow=n))
mu <- mean(sample_means)
sigma <- sqrt(mu/n)      # mu = Var(Xi)
# ECDF
xlims <- c(mu-3*sigma,mu+3*sigma)
Fs <- ecdf(sample_means)
plot(Fs,
xlim = xlims,
ylim = c(0,1),
col = "blue",
lwd = 2,
main=paste("ECDF vs Normal CDF (n=", n, ")", sep=""))
curve(pnorm(x, mean = mu, sd = sigma), col = "red", lwd = 2, add = TRUE)
max_difference <- max(abs(Fs(sample_means) - pnorm(sample_means, mean = mu, sd = sqrt(mu/n))))
cat("n =", n, "- Max difference =", max_diff, "\n")
}
n <- 100
sums <- colSums(matrix(rpois(n*K, lambda = mu), nrow=n))
critical <- 8e8
emp_prob <- mean(sums < critical)
emp_prob
n <- 1
critical <- 8e8
repeat {
sums <- colSums(matrix(rpois(n*K, lambda = mu), nrow=n))
emp_prob <- mean(sums < critical)
if (emp_prob < 0.95) break
n <- n + 1
}
cat("Max n:", n)
n <- 1
critical <- 8e8
repeat {
sums <- colSums(matrix(rpois(n*K, lambda = mu), nrow=n))
emp_prob <- mean(sums < critical)
if (emp_prob < 0.95) break
n <- n + 1
}
cat("Max n:", n)
# your team id number
###
id <- 50                  ### Change to the correct id!
###
set.seed(id)
p <- id/100
# matrices G and H
G <- matrix(c(1, 1, 1, 0, 0, 0, 0,
1, 0, 0, 1, 1, 0, 0,
0, 1, 0, 1, 0, 1, 0,
1, 1, 0, 1, 0, 0, 1), nrow = 4, byrow = TRUE)
H <- t(matrix(c(1, 0, 1, 0, 1, 0, 1,
0, 1, 1, 0, 0, 1, 1,
0, 0, 0, 1, 1, 1, 1), nrow = 3, byrow = TRUE))
# cat("The matrix G is: \n")
#G
#cat("The matrix H is: \n")
#H
#cat("The product GH must be zero: \n")
#(G%*%H) %%2
# generate N messages
message_generator <- function(N) {
matrix(sample(c(0,1), 4*N, replace = TRUE), nrow = N)
}
messages <- message_generator(100)
codewords <- (messages %*% G) %% 2
#  errors <- ...
#  received <-
M <- 137                      # atomic mass of Cesium-137
m <- id * 1e-6                # mass of each sample in grams
Na <- 6e23                    # Avogadro constant
N <- Na * m / M
T <- 30.1 * 365 * 24 * 3600   # half-life period in seconds
lambda <- log(2) / T
mu <- N * lambda
K <- 1e3
for(n in c(5, 10, 50)) {
sample_means <- colMeans(matrix(rpois(n*K, lambda = mu), nrow=n))
mu <- mean(sample_means)
sigma <- sqrt(mu/n)      # mu = Var(Xi)
# ECDF
xlims <- c(mu-3*sigma,mu+3*sigma)
Fs <- ecdf(sample_means)
plot(Fs,
xlim = xlims,
ylim = c(0,1),
col = "blue",
lwd = 2,
main=paste("ECDF vs Normal CDF (n=", n, ")", sep=""))
curve(pnorm(x, mean = mu, sd = sigma), col = "red", lwd = 2, add = TRUE)
max_difference <- max(abs(Fs(sample_means) - pnorm(sample_means, mean = mu, sd = sqrt(mu/n))))
cat("n =", n, "- Max difference =", max_diff, "\n")
}
# your team id number
###
id <- 50                  ### Change to the correct id!
###
set.seed(id)
p <- id/100
# matrices G and H
G <- matrix(c(1, 1, 1, 0, 0, 0, 0,
1, 0, 0, 1, 1, 0, 0,
0, 1, 0, 1, 0, 1, 0,
1, 1, 0, 1, 0, 0, 1), nrow = 4, byrow = TRUE)
H <- t(matrix(c(1, 0, 1, 0, 1, 0, 1,
0, 1, 1, 0, 0, 1, 1,
0, 0, 0, 1, 1, 1, 1), nrow = 3, byrow = TRUE))
# cat("The matrix G is: \n")
#G
#cat("The matrix H is: \n")
#H
#cat("The product GH must be zero: \n")
#(G%*%H) %%2
# generate N messages
message_generator <- function(N) {
matrix(sample(c(0,1), 4*N, replace = TRUE), nrow = N)
}
messages <- message_generator(100)
codewords <- (messages %*% G) %% 2
#  errors <- ...
#  received <-
M <- 137                      # atomic mass of Cesium-137
m <- id * 1e-6                # mass of each sample in grams
Na <- 6e23                    # Avogadro constant
N <- Na * m / M
T <- 30.1 * 365 * 24 * 3600   # half-life period in seconds
lambda <- log(2) / T
mu <- N * lambda
K <- 1e3
for(n in c(5, 10, 50)) {
sample_means <- colMeans(matrix(rpois(n*K, lambda = mu), nrow=n))
mu <- mean(sample_means)
sigma <- sqrt(mu/n)      # mu = Var(Xi)
# ECDF
xlims <- c(mu-3*sigma,mu+3*sigma)
Fs <- ecdf(sample_means)
plot(Fs,
xlim = xlims,
ylim = c(0,1),
col = "blue",
lwd = 2,
main=paste("ECDF vs Normal CDF (n=", n, ")", sep=""))
curve(pnorm(x, mean = mu, sd = sigma), col = "red", lwd = 2, add = TRUE)
max_difference <- max(abs(Fs(sample_means) - pnorm(sample_means, mean = mu, sd = sqrt(mu/n))))
cat("n =", n, "- Max difference =", max_diff, "\n")
}
n <- 1
critical <- 8e8
repeat {
sums <- colSums(matrix(rpois(n*K, lambda = mu), nrow=n))
emp_prob <- mean(sums < critical)
if (emp_prob < 0.95) break
n <- n + 1
}
cat("Max n:", n)
n <- 1
critical <- 8e8
repeat {
sums <- colSums(matrix(rpois(n*K, lambda = mu), nrow=n))
emp_prob <- mean(sums < critical)
if (emp_prob < 0.95) break
n <- n + 1
}
cat("Max n:", n)
# your team id number
###
id <- 50                  ### Change to the correct id!
###
set.seed(id)
p <- id/100
# matrices G and H
G <- matrix(c(1, 1, 1, 0, 0, 0, 0,
1, 0, 0, 1, 1, 0, 0,
0, 1, 0, 1, 0, 1, 0,
1, 1, 0, 1, 0, 0, 1), nrow = 4, byrow = TRUE)
H <- t(matrix(c(1, 0, 1, 0, 1, 0, 1,
0, 1, 1, 0, 0, 1, 1,
0, 0, 0, 1, 1, 1, 1), nrow = 3, byrow = TRUE))
# cat("The matrix G is: \n")
#G
#cat("The matrix H is: \n")
#H
#cat("The product GH must be zero: \n")
#(G%*%H) %%2
# generate N messages
message_generator <- function(N) {
matrix(sample(c(0,1), 4*N, replace = TRUE), nrow = N)
}
messages <- message_generator(100)
codewords <- (messages %*% G) %% 2
#  errors <- ...
#  received <-
M <- 137                      # atomic mass of Cesium-137
m <- id * 1e-6                # mass of each sample in grams
Na <- 6e23                    # Avogadro constant
N <- Na * m / M
T <- 30.1 * 365 * 24 * 3600   # half-life period in seconds
lambda <- log(2) / T
mu <- N * lambda
K <- 1e3
for(n in c(5, 10, 50)) {
sample_means <- colMeans(matrix(rpois(n*K, lambda = mu), nrow=n))
mu <- mean(sample_means)
sigma <- sqrt(mu/n)      # mu = Var(Xi)
# ECDF
xlims <- c(mu-3*sigma,mu+3*sigma)
Fs <- ecdf(sample_means)
plot(Fs,
xlim = xlims,
ylim = c(0,1),
col = "blue",
lwd = 2,
main=paste("ECDF vs Normal CDF (n=", n, ")", sep=""))
curve(pnorm(x, mean = mu, sd = sigma), col = "red", lwd = 2, add = TRUE)
max_difference <- max(abs(Fs(sample_means) - pnorm(sample_means, mean = mu, sd = sqrt(mu/n))))
cat("n =", n, "- Max difference =", max_diff, "\n")
}
n <- 1
critical <- 8e8
repeat {
sums <- colSums(matrix(rpois(n*K, lambda = mu), nrow=n))
emp_prob <- mean(sums < critical)
if (emp_prob < 0.95) break
n <- n + 1
}
cat("Max n:", n)
nu1 <- 1  # change this!
K <- 1e3
n <- 5
sample_means <- colMeans(matrix(rexp(n*K, rate = nu1), nrow=n))
mu <- 0       # change this!
sigma <- 1    # change this!
xlims <- c(mu-3*sigma,mu+3*sigma)
Fs <- ecdf(sample_means)
plot(Fs,
xlim = xlims,
col = "blue",
lwd = 2,
main = "Comparison of ecdf and cdf")
curve(pnorm(x, mean = mu, sd = sigma), col = "red", lwd = 2, add = TRUE)
n <- 1
critical <- 8e8
repeat {
sums <- colSums(matrix(rpois(n*K, lambda = mu), nrow=n))
emp_prob <- mean(sums < critical)
if (emp_prob < 0.95) break
n <- n + 1
}
# your team id number
###
id <- 50                  ### Change to the correct id!
###
set.seed(id)
p <- id/100
# matrices G and H
G <- matrix(c(1, 1, 1, 0, 0, 0, 0,
1, 0, 0, 1, 1, 0, 0,
0, 1, 0, 1, 0, 1, 0,
1, 1, 0, 1, 0, 0, 1), nrow = 4, byrow = TRUE)
H <- t(matrix(c(1, 0, 1, 0, 1, 0, 1,
0, 1, 1, 0, 0, 1, 1,
0, 0, 0, 1, 1, 1, 1), nrow = 3, byrow = TRUE))
# cat("The matrix G is: \n")
#G
#cat("The matrix H is: \n")
#H
#cat("The product GH must be zero: \n")
#(G%*%H) %%2
# generate N messages
message_generator <- function(N) {
matrix(sample(c(0,1), 4*N, replace = TRUE), nrow = N)
}
messages <- message_generator(100)
codewords <- (messages %*% G) %% 2
#  errors <- ...
#  received <-
M <- 137                      # atomic mass of Cesium-137
m <- id * 1e-6                # mass of each sample in grams
Na <- 6e23                    # Avogadro constant
N <- Na * m / M
T <- 30.1 * 365 * 24 * 3600   # half-life period in seconds
lambda <- log(2) / T
mu <- N * lambda
K <- 1e3
for(n in c(5, 10, 50)) {
sample_means <- colMeans(matrix(rpois(n*K, lambda = mu), nrow=n))
mu <- mean(sample_means)
sigma <- sqrt(mu/n)      # mu = Var(Xi)
# ECDF
xlims <- c(mu-3*sigma,mu+3*sigma)
Fs <- ecdf(sample_means)
plot(Fs,
xlim = xlims,
ylim = c(0,1),
col = "blue",
lwd = 2,
main=paste("ECDF vs Normal CDF (n=", n, ")", sep=""))
curve(pnorm(x, mean = mu, sd = sigma), col = "red", lwd = 2, add = TRUE)
max_difference <- max(abs(Fs(sample_means) - pnorm(sample_means, mean = mu, sd = sqrt(mu/n))))
cat("n =", n, "- Max difference =", max_diff, "\n")
}
n <- 1
critical <- 8e8
repeat {
sums <- colSums(matrix(rpois(n*K, lambda = mu), nrow=n))
emp_prob <- mean(sums < critical)
if (emp_prob < 0.95) break
n <- n + 1
}
cat("Max n:", n)
n <- 1
critical <- 8e8
repeat {
sums <- colSums(matrix(rpois(n*K, lambda = mu), nrow=n))
emp_prob <- mean(sums < critical)
if (emp_prob < 0.95) break
n <- n + 1
}
cat("Max n:", n)
n <- 1
critical <- 8e8
repeat {
sums <- colSums(matrix(rpois(n*K, lambda = mu), nrow=n))
emp_prob <- mean(sums < critical)
if (emp_prob < 0.95) break
n <- n + 1
}
cat("Max n:", n)
n <- 1
critical <- 8e8
repeat {
sums <- colSums(matrix(rpois(n*K, lambda = mu), nrow=n))
emp_prob <- mean(sums < critical)
if (emp_prob < 0.95) break
n <- n + 1
}
cat("Max n:", n)
